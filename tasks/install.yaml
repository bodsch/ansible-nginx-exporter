---

- name: detect binary file for nginx_exporter
  become: false
  delegate_to: "{{ nginx_exporter_delegate_to }}"
  run_once: "{{ 'false' if nginx_exporter_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ nginx_exporter_local_tmp_directory }}/nginx-prometheus-exporter"
  register: stat_file_binary

- name: propagate files
  when:
    - stat_file_binary.stat.exists
  block:
    - name: propagate nginx_exporter binaries
      ansible.builtin.copy:
        src: "{{ nginx_exporter_local_tmp_directory }}/nginx-prometheus-exporter"
        dest: "{{ nginx_exporter_install_path }}/nginx_exporter"
        mode: 0755
        owner: "{{ nginx_exporter_system_user }}"
        group: "{{ nginx_exporter_system_group }}"
        remote_src: "{{ 'true' if nginx_exporter_direct_download else 'false' }}"

    - name: make files executable
      ansible.builtin.file:
        path: "{{ nginx_exporter_install_path }}/nginx_exporter"
        mode: 0755
        owner: "{{ nginx_exporter_system_user }}"
        group: "{{ nginx_exporter_system_group }}"

- name: create local facts
  ansible.builtin.template:
    src: ansible_facts.j2
    dest: /etc/ansible/facts.d/nginx_exporter.fact
    mode: 0755

- name: create link to binary
  ansible.builtin.file:
    src: "{{ nginx_exporter_install_path }}/nginx_exporter"
    dest: /usr/bin/nginx_exporter
    state: link
    force: true
    follow: false
  notify:
    - restart nginx_exporter

- name: create systemd service unit
  ansible.builtin.template:
    src: "init/systemd/nginx_exporter.service.j2"
    dest: "{{ systemd_lib_directory }}/nginx_exporter.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - daemon-reload
    - restart nginx_exporter

...
